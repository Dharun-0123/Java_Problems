package zoho_test;

import java.util.Scanner;

public class Array_problem {

	public static void main(String[] args) {
//Stage 1: Very Basic Array + Loops
//Input & Print Array
//Read n numbers into an array, then print them.
//(For practice: try both for loop and while loop).
		Scanner sc = new Scanner(System.in);

		System.out.println("Enter how many you want :");
		int n = sc.nextInt();
		int arr[] = new int[n];
		for (int i = 0; i < n; i++) {
			System.out.println("Enter the value of " + i + " ");
			arr[i] = sc.nextInt();
		}
//		int i=0;
//		while(i<n) {
//			System.out.println("Enter the value of " + i + " ");
//			arr[i]=sc.nextInt();
//			i++;
//		}
//		for(int a:arr) {
//			System.out.print(a+" ");
//		}
		int sum = 0;
		for (int a : arr) {
			sum += a;
		}
		System.out.println(sum);
//		Find Maximum and Minimum
//		Example: {2, 9, 5, 1} â†’ max = 9, min = 1.
		int min = Integer.MAX_VALUE;
		int max = Integer.MIN_VALUE;

		for (int a : arr) {
			if (a > max) {
				max = a;

			}
			if (a < min) {
				min = a;
			}
		}
		System.out.println("max= " + max);
		System.out.println("min= " + min);

//		ðŸ”¹ Stage 2: Moderate Array Problems
//		Reverse an Array
//		Input: {1, 2, 3, 4} â†’ Output: {4, 3, 2, 1}.
		for (int a : arr) {
			System.out.print(a + " ");
		}
		int start = 0;
		int end = (arr.length) - 1;
		while (start < end) {
			int temp = arr[start];
			arr[start] = arr[end];
			arr[end] = temp;
			start++;
			end--;

		}
		System.out.println();
		for (int a : arr) {
			System.out.print(a + " ");
		}

//		Count Even & Odd Numbers
//		Input: {1, 2, 3, 4, 5} â†’ Even = 2, Odd = 3.

		System.out.println();
		int even = 0, odd = 0;
		for (int i = 0; i < n; i++) {
			if (arr[i] % 2 == 0) {
				if (arr[i] != 1) {
					System.out.println("Even = " + arr[i]);
					even++;
				}
			}
			if (arr[i] % 2 != 0) {
				if (arr[i] != 1) {
					System.out.println("odd = " + arr[i]);
					odd++;
				}

			}
		}
		System.out.println("No of even are= " + even);
		System.out.println("No of odd are= " + odd);

//		Linear Search
//		Find if a number exists in the array.
//		Input: {1, 4, 7, 9},
//		target=7 â†’ Output: "Found at index 2".
		int target = 8;
		int index = 0;
		boolean found = false;
		int atindex = 0;
		for (int a : arr) {
			if (a == target) {
				atindex = index;
				found = true;
			}

			index++;
		}
		System.out.println(found ? index : "not found");

		int secondmax = Integer.MIN_VALUE;
		int secondmin = Integer.MAX_VALUE;

		for (int a : arr) {
			if (a > secondmax) {
				if (a != max) {
					secondmax = a;
				}
			}
			if (a < secondmin) {
				if (a != min) {
					secondmin = a;
				}
			}
		}
		System.out.println("Second Max= " + secondmax);

		System.out.println("Second Min= " + secondmin);

//Check if Array is Sorted (Ascending)
//{1, 2, 3, 5} â†’ Sorted
//{1, 4, 3, 2} â†’ Not sorted

		for (int i = 0; i < arr.length; i++) {
			for (int j = i + 1; j < arr.length; j++) {
				if (arr[j] < arr[i]) {
					int temp = arr[j];
					arr[j] = arr[i];
					arr[i] = temp;
				}
			}
		}
		System.out.println("-----Reverse------");
		for (int a : arr) {
			System.out.print(a + " ");
		}

//	Rotate Array by K Steps
//	Input: {1, 2, 3, 4, 5}, 
//	k=2 â†’ Output: {4, 5, 1, 2, 3}.

		int k = 3;
		k = k % n;

		start = 0;
		end = (arr.length) - 1;
		while (start < end) {
			int temp = arr[start];
			arr[start] = arr[end];
			arr[end] = temp;
			start++;
			end--;

		}

		start = 0;
		end = k - 1;

		while (start < end) {
			int temp = arr[start];
			arr[start] = arr[end];
			arr[end] = temp;
			start++;
			end--;
		}
		start = k;
		end = n - 1;
		while (start < end) {
			int temp = arr[start];
			arr[start] = arr[end];
			arr[end] = temp;
			start++;
			end--;
		}
		System.out.println();
		for (int a : arr) {
			System.out.print(a + " ");
		}

	}

}
